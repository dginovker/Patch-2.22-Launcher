name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest

    env:
      Solution_Name: PatchLauncher.sln

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install .NET
    - name: Install .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    # Create the app package by building and packaging the Windows Application Packaging project
    - name: Create Main App
      run: dotnet publish -c Release -o PatchLauncher "BFME1\BFME1.csproj" --runtime win-x64 --self-contained true /p:UseAppHost=true /p:PublishSingleFile=true
      env:
        Appx_Bundle: Always
        Appx_Bundle_Platforms: x86|x64
        Appx_Package_Build_Mode: StoreUpload
        Configuration: ${{ matrix.configuration }}

    # Create the app package by building and packaging the Windows Application Packaging project
    - name: Create Restarter
      run: dotnet publish -c Release -o PatchLauncher "Restarter\Restarter.csproj" --runtime win-x64 --self-contained true /p:UseAppHost=true /p:PublishSingleFile=true
      env:
        Appx_Bundle: Always
        Appx_Bundle_Platforms: x86|x64
        Appx_Package_Build_Mode: StoreUpload
        Configuration: ${{ matrix.configuration }}

    # Upload Patch-2.22-Launcher\PatchLauncher folder
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: PatchLauncher.zip
        path: PatchLauncher

    # Zip the build artifacts
    - name: Zip build artifacts
      run: |
        cd PatchLauncher
        7z a -tzip ${{ github.workspace }}\PatchLauncher.zip *

    # Create a new Github Release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false

    # Upload the build artifacts to the new Github Release
    - name: Upload Release Asset
      id: upload-release-asset
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ github.run_number }}
        files: PatchLauncher.zip
        fail_on_unmatched_files: true
        name: Patch Launcher Files - ${{ github.run_number }}
